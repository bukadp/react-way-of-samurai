{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","NavLink","to","name","Message","maxLengthCreator50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","AddMessageForm_AddMessageForm","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","Redirect","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,0HCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEX,QACtCO,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCDnBC,EAJC,SAACZ,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASR,EAAMF,2CCCtCe,EAAqBC,YAAiB,IAe7BC,kBAAW,CAACC,KAAM,wBAAlBD,CAbf,SAAwBf,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMY,SAAUjB,EAAMkB,cAElBf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,UAAWC,IACXV,KAAK,iBACLW,YAAY,qBACZC,SAAU,CAACC,IAAUX,KAC5BV,EAAAC,EAAAC,cAAA,yBCuBGoB,EA7BC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMhC,QAAQmC,IAAK,SAAAC,GAAC,OAAI3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAYpB,KAAMmB,EAAEnB,KAAMqB,IAAKF,EAAE5B,GAAIA,GAAI4B,EAAE5B,OACrF+B,EAAmBP,EAAM7B,SAASgC,IAAK,SAAAK,GAAC,OAAI/B,EAAAC,EAAAC,cAAC8B,EAAD,CAASrC,QAASoC,EAAEpC,QAASkC,IAAKE,EAAEhC,OAC/DwB,EAAMU,eAS3B,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,cACZiC,GAENzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,UACdM,EAAAC,EAAAC,cAAA,WAAO4B,IAGX9B,EAAAC,EAAAC,cAACgC,EAAD,CAAqBpB,SAfT,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAOF,8ECf7BI,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,gBCgBRE,sBACXC,YAdkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACH,GACVS,EAASC,YAAmBV,QDRR,SAACW,GAAc,IAErCC,EAFqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAhB,IAAA,SAAA2B,MAAA,WAInC,OAAKP,KAAKpD,MAAMyC,OAETtC,EAAAC,EAAAC,cAAC0C,EAAcK,KAAKpD,OAFIG,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAUlD,GAAG,eAJTsC,EAAA,CAEXa,IAAMd,WAUtC,OAFqCH,YAAQJ,EAARI,CAAoCI,ICG9DL,CAGblB","file":"static/js/4.6334ab22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Jnyl\",\"dialogsItems\":\"Dialogs_dialogsItems__2XhoU\",\"active\":\"Dialogs_active__7P_17\",\"messages\":\"Dialogs_messages__2Exvm\",\"message\":\"Dialogs_message__3es76\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLengthCreator50 = maxLengthCreator(50)\r\n\r\nfunction AddMessageForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <Field component={Textarea}\r\n                   name=\"newMessageBody\"\r\n                   placeholder=\"Enter text message\"\r\n                   validate={[required, maxLengthCreator50]}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm ({form: \"dialogAddMessageForm\"}) (AddMessageForm)\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageFormRedux from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n   /* if (!props.isAuth) return <Redirect to={\"/login\"} /> ;*/\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}