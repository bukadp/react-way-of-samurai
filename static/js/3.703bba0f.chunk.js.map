{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","postsBlock","posts","item","React","Component","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","_ref","profile","className","s","src","photos","large","ProfileInfo_ProfileStatusWithHooks","Preloader","Post","message","likesCount","maxLengthCreator10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","MyPosts","memo","console","log","postsElements","map","p","MyPosts_Post_Post","createRef","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.703bba0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3g-Tw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__wLzcl\",\"posts\":\"MyPosts_posts__3RvL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YBvs\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        } );\r\n    }\r\n    deactivateEditMode() {\r\n        this.setState( {\r\n            editMode: false\r\n        } );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n\r\n        //console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"render\")\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode.bind(this) } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, {useEffect, useState} from 'react';\r\n/*import s from './ProfileInfo.module.css';*/\r\n\r\nfunction ProfileStatusWithHooks(props) {\r\n const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus ( e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           onChange={onStatusChange}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10)\r\n\r\nfunction AddNewPostForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\"\r\n                       component={Textarea}\r\n                       placeholder='your message'\r\n                       validate={[required, maxLengthCreator10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm)\r\n\r\n\r\nconst MyPosts = React.memo( props => {\r\n    console.log(\"RENDER\")\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}